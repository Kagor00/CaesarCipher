
В проекті вийшло реалізувати шифрування Цезаря на двох мовах (українська, англійська)  шифування\дешифрування
за ключем та brute_force - автоматичний підбір ключа під зашифрований текст, використовуючи аналіз тексту.
Brute_force розшифровує текст завжди, якщо це текст, а не просто набір символів.

Мова тексту визначається автоматично (підраховується кількість літер у тексті, ігноруючи інші символи).
Відповідний алфавіт також підтягується автоматично.

Програму можна запускати з аргументами та в інтерактивному режимі. З трьома аргументами, це коли ми вводимо
команду ENCRYPT або DECRYPT, шлях до файлу і ключ. З двома аргументами - коли ми вводимо команду BRUTE_FORCE
та шлях до файлу. Інтерактивний режим - коли ми запускаємо програму без аргументів і відбувається діалог
програми з користувачем. Команди можна писати з будь-якої літери, незалежно від регістру, команду brute-force
також можна писати в кількох варіантах (разом, через дефіс, через нижнє підкреслення), це зроблено для
зручності роботи з програмою.

Для зберігання символів я вирішив використовувати LinkedHashSet, оскільки для визначення мови використовується
метод contains, перевіряючи символи. Швидкість такого алгоритму саме з використанням даної колекції буде O(1),
навідміну від інших варіантів, де швидкість O(n). Можна було використати ArrayList, HashMap, або просто масиви
символів,  але спробувавши різні підходи, я зупинився саме на LinkedHashSet.

Якщо назва вхідного файлу вже містить [ENCRYPTED] тоді при дешифруванні у назві вихідного файлу цей
субрядок заміниться.

Пакет cryptography містить класи для роботи з шифром (CaesarCipher та BruteForce).
Пакет text містить класи для роботи з текстом (Alphabetic - символи двох алфавітів та Language - визначення
мови тексту).
Пакет file містить класи для роботи з файлами (FileService - читання\запис та Tools - операції кінцевої обробки
наших файлів).
Пакет main містить класи для запуску нашої програми (CryptoManager - режими запуску та Runner - запуск програми).


Із завдань проекту реалізовано: основні завдання, поліглот, алгоритм "креатор", поціновувач зручності,
частотний аналіз(Криптограф).


Бажаю приємного перегляду та очікую на feedback :)



  
